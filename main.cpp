#include <iostream>
#include <string>
#include <set>
#include <algorithm>
#include <vector>
using namespace std;


//--------------------------------------------------------------

//Task 4A

//В один из жарких летних дней Петя и его друг Вася решили купить арбуз. Они выбрали самый большой и самый спелый, на их взгляд. После недолгой процедуры взвешивания весы показали w килограмм. Поспешно прибежав домой, изнемогая от жажды, ребята начали делить приобретенную ягоду, однако перед ними встала нелегкая задача. Петя и Вася являются большими поклонниками четных чисел, поэтому хотят поделить арбуз так, чтобы доля каждого весила именно четное число килограмм, при этом не обязательно, чтобы доли были равными по величине. Ребята очень сильно устали и хотят скорее приступить к трапезе, поэтому Вы должны подсказать им, удастся ли поделить арбуз, учитывая их пожелание. Разумеется, каждому должен достаться кусок положительного веса.
//Входные данные
//В первой и единственной строке входных данных записано целое число w(1 ≤  w ≤  100) — вес купленного ребятами арбуза
//Выходные данные
//Выведите YES, если ребята смогут поделить арбуз на две части, каждая из которых весит четное число килограмм,
 //и NO в противном случае

// int main() {
//     int w;
//     std::cin >> w;
//
//     if (w > 2 && w % 2 == 0) {
//         cout << "YES\n";
//     }
//     else {
//         cout << "NO\n";
//     }
//
// }

//-----------------------------------------------------------------------------

//Задача 71А

//Иногда некоторые слова вроде «localization» или «internationalization» настолько длинны, что их весьма утомительно писать много раз в каком либо тексте.Будем считать слово слишком длинным, если его длина строго больше10символов.Все слишком длинные слова можно заменить специальной аббревиатурой.Эта аббревиатура строится следующим образом: записываетсяпервая и последняя буква слова, а между ними — количество букв между первой и последней буквой(в десятичной системе счисления и без ведущих нулей).Таком образом, « localization» запишется как « l10n» , а «internationalization» как « i18n» .Вам предлагается автоматизировать процесс замены слов на аббревиатуры.При этом все слишком длинные слова должны быть заменены аббревиатурой, а слова, не являющиеся слишком длинными,должны остаться без изменений.


// int main() {
//     int n;
//     cin >> n;
//
//     while (n--) {
//      string word;
//      cin >> word;
//
//      if (word.length() > 10) {
//       cout << word[0] << word.length() - 2 << word.back() << "\n";
//      } else {
//       cout << word << "\n";
//      }
//     }
// }

//---------------------------------------------------------------------------

//Task 231A

// Однажды трое лучших друзей Петя, Вася и Тоня решили создать команду и участвовать в соревновании по программированию. Обычно на соревнованиях по программированию участникам предлагается несколько задач. Еще перед началом друзья договорились, что они будут реализовывать задачу, если как минимум двое из них придумали и уверены в решении, в противном случае ребята не будут писать решение этой задачи.
// На этом соревновании организаторы предложили n задач. Для каждой задачи известно, кто из друзей придумал и уверен в ее решении. Помогите друзьям найти количество задач, по которым они будут писать решение.

// int main() {
//  int n, count = 0;
//  cin >> n;
//
//  while (n--) {
//   int p, v, t;
//   cin >> p >> v >> t;
//
//   if (p + v + t >= 2)
//    count++;
//  }
//
//  cout << count << endl;
// }

//-----------------------------------------------------------------------

//Задача 236А


// int main() {
//  string username;
//  cin >> username;
//
//  set<char> unique_chars(username.begin(), username.end());
//
//  if (unique_chars.size() % 2 == 0)
//   cout << "CHAT WITH HER!" << endl;
//  else
//   cout << "IGNORE HIM!" << endl;
//
// }

//----------------------------------------------------------------------

//Задача 281А

// int main() {
//  string word;
//  cin >> word;
//
//  if (islower(word[0])) {
//   word[0] = toupper(word[0]);
//  }
//
//  cout << word << endl;
// }

//-------------------------------------------------------------------------


//Задача 734А


// int main() {
//  int n, anton = 0, danik = 0;
//  cin >> n;
//
//  string results;
//  cin >> results;
//
//  for (char game : results) {
//   if (game == 'A') anton++;
//   else danik++;
//  }
//
//  if (anton > danik) cout << "Anton" << endl;
//  else if (danik > anton) cout << "Danik" << endl;
//  else cout << "Friendship" << endl;
//
// }

//-------------------------------------------------------------------

//Задача 41А

// int main() {
//  string s, t;
//  cin >> s >> t;
//
//  if (s == string(t.rbegin(), t.rend()))
//   cout << "YES" << endl;
//  else
//   cout << "NO" << endl;
//
// }

//-------------------------------------------------------------------------------------


//Задача 1370А

// int main() {
//  int n;
//  cin >> n;
//  cout << n/2 << endl;
// }
//

//---------------------------------------------------------------------

//Задача 546А

// int main() {
//  int k,n,w;
//  cin>>k>>n>>w;
//  for(int i=1;i<=w;i++) {
//   n -= k*i;
//  }
//  printf("%d",n);
// }

//-----------------------------------------------------------------------

//Задача 1328А

// int main() {
//  int t;
//  cin >> t;
//
//  while (t--) {
//   int a, b;
//   cin >> a >> b;
//
//   int remainder = a % b;
//   int moves = (remainder == 0) ? 0 : (b - remainder);
//
//   cout << moves << endl;
//  }
// }

//---------------------------------------------------------------

//Задача 1999А

// int main() {
//  int n;
//  cin >> n;
//
//  int sum = (n / 10) + (n % 10);
//  cout << sum << endl;
//
// }

//---------------------------------------------------------------

//Задача 9А

// int main() {
//  int Y, W;
//  cin >> Y >> W;
//
//  int bestRoll = 7 - max(Y, W);
//  int gcd = gcd(bestRoll, 6);
//  cout << bestRoll / gcd << "/" << 6 / gcd << endl;
//
// }

//---------------------------------------------------------------

//Task 1A

// int main() {
//  long n, m, a;
//  cin >> n >> m >> a;
//
//  long tilesX = (n + a - 1) / a;
//  long tilesY = (m + a - 1) / a;
//
//  cout << tilesX * tilesY << endl;
//
// }

//--------------------------------------------------------------

//Task 705A

// int main() {
//  int n;
//  cin >> n;
//
//  for (int i = 1; i <= n; i++) {
//   if (i % 2 == 1) {
//    cout << "I hate";
//   }
//   else {
//    cout << "I love";
//   }
//
//   if (i < n) {
//    cout << " that ";
//   }
//   else {
//    cout << " it";
//   }
//  }
//
//  cout << endl;
// }

//---------------------------------------------------------------

//Task 1351A

// int main() {
//  int a, b;
//  cin >> a >> b;
//  int c = a + b;
//  cout << c << endl;
//
// }

//--------------------------------------------------------------

//Task 92A

// int main() {
//  int n, m;
//  cin >> n >> m;
//  int currentMorz = 1;
//  while (m >= currentMorz) {
//   m -= currentMorz;
//   currentMorz++;
//
//   if (currentMorz > n) {
//    currentMorz = 1;
//   }
//  }
//
//  cout << m << endl;
// }

//-------------------------------------------------------------

//Task 776B

//Trustly I used ChatGPT, but not for answers, only tips!

int main() {
 int n;
 cin >> n;

 vector<int> color(n + 2, 0);
 int k = 1;

 for (int i = 2; i <= n + 1; i++) {
  if (color[i] == 0) {
   color[i] = k++;
  }
  for (int j = 2 * i; j <= n + 1; j += i) {
   if (color[j] == 0) {
    color[j] = color[i];
   }
  }
 }

 cout << k - 1 << endl;
 for (int i = 2; i <= n + 1; i++) {
  cout << color[i] << " ";
 }
 cout << endl;

}